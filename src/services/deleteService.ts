import { appPrismaClient } from '../services/dbService';
import { Service } from '../types/interface/serviceInterface';

export class ServiceRepository {
    // M√©todo para buscar servi√ßos ativos
    async findActiveServices(): Promise<Service[]> {
        return appPrismaClient.service.findMany({
            where: { isActive: true },
        });
    }

    // M√©todo para inserir um registro de teste
    async insertTestService(): Promise<Service> {
        const testService = {
            name: 'Inscri√ß√£o Estadual',
            endpoint: '/ticketsValidados/ie',
            isActive: true,
            processorType: 'processor-ie',
        };

        const storageService = {
            name: 'Armazenamento',
            endpoint: 'null',
            isActive: true,
            processorType: 'processor-storage',
        };

        return appPrismaClient.service.create({
            data: testService,
        });
    }

    // Novo m√©todo para limpar a tabela Service
    async clearServices(): Promise<void> {
        await appPrismaClient.service.deleteMany({});
        console.log("üßπ Tabela Service limpa com sucesso!");
    }

    // M√©todo para testar a inser√ß√£o, busca e limpeza
    async testServiceOperations(): Promise<void> {
        try {
            // Limpa a tabela antes de come√ßar (opcional, comente se n√£o quiser)
            console.log("üîß Limpando a tabela Service...");
            await this.clearServices();

            // Insere um servi√ßo de teste
            console.log("üîß Inserindo servi√ßo de teste...");
            const insertedService = await this.insertTestService();
            console.log("‚úÖ Servi√ßo de teste inserido:", insertedService);

            // Busca servi√ßos ativos
            console.log("üîç Buscando servi√ßos ativos...");
            const activeServices = await this.findActiveServices();
            console.log("‚úÖ Servi√ßos ativos encontrados:", activeServices);
        } catch (error) {
            console.error("‚ùå Erro durante o teste:", error);
        }
    }
}

// Inst√¢ncia da classe e execu√ß√£o autom√°tica do teste
const serviceRepository = new ServiceRepository();
serviceRepository.testServiceOperations().catch(console.error);